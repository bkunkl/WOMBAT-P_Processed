geom_segment(aes(xend = Workflow, yend = 0), size = 1,
position = position_dodge(width = 0.5)) +
# Add points at the value
geom_point(size = 5,  position = position_dodge(width = 0.5)) +
# Add labels for the value
# geom_text(aes(label = round(value, 0)), size=3, hjust = rep(c(1.5, -0.5), 4),
#           position = position_dodge(width = 0.5)) +
# Add titles and caption
labs(title = "B) Coverage",
subtitle = "Fraction identified in all samples",
caption = "", x = "") +
# Remove the legend title
theme(legend.title = element_blank()) +
# Specify the colors and labels for the color aesthetic
scale_color_manual(values = c_types) + theme_light() +
# Rotate the x labels 90 degrees
theme(axis.text.x = element_text(colour=c_workflows, size = 12, hjust = 1, vjust = 0.2, angle = 90,  face = "bold"))
# g2 <- newggslopegraph(ttt, Workflow, value, Metric, RemoveMissing=T, Title = "B) Coverage", WiderLabels = T,
#             SubTitle = "Fraction identified in all samples", Caption = "") +
# ylim(0,1) + geom_hline(yintercept = c(0,1))
sel <- c("Functionality.Performance.Quantification.CVPeptides", "Functionality.Performance.Quantification.CVProteins",
"Functionality.Performance.Quantification.CorrelationPeptides", "Functionality.Performance.Quantification.CorrelationProteins")
ttt <- tttb[tttb$Metric %in% sel, ]
ttt$Metric <- gsub("[A-Z,a-z]*\\.","", ttt$Metric)
g3 <- ggplot(ttt, aes(x = Workflow, y = value, color = Metric)) +
# Add segments from the baseline to the value
geom_segment(aes(xend = Workflow, yend = 0), size = 1,
position = position_dodge(width = 0.7)) +
# Add points at the value
geom_point(size = 5,  position = position_dodge(width = 0.7)) +
# Add labels for the value
# geom_text(aes(label = round(value, 0)), size=3, hjust = rep(c(1.5, -0.5), length(sel)*2),
#           position = position_dodge(width = 0.5)) +
# Add titles and caption
labs(title = "C) Variance and similarity",
subtitle = "Pearson correlation and coefficient of variance",
caption = "", x = "") +
# Remove the legend title
theme(legend.title = element_blank()) +
g3 <- ggplot(ttt, aes(x = Workflow, y = value, color = Metric)) +
# Add segments from the baseline to the value
geom_segment(aes(xend = Workflow, yend = 0), size = 1,
position = position_dodge(width = 0.7)) +
# Add points at the value
geom_point(size = 5,  position = position_dodge(width = 0.7)) +
# Add labels for the value
# geom_text(aes(label = round(value, 0)), size=3, hjust = rep(c(1.5, -0.5), length(sel)*2),
#           position = position_dodge(width = 0.5)) +
# Add titles and caption
labs(title = "C) Variance and similarity",
subtitle = "Pearson correlation and coefficient of variance",
caption = "", x = "") +
# Remove the legend title
theme(legend.title = element_blank()) +
# Specify the colors and labels for the color aesthetic
scale_color_manual(values = c_types) + theme_light() +
# Rotate the x labels 90 degrees
theme(axis.text.x = element_text(colour=c_workflows, size = 12, hjust = 1, vjust = 0.2, angle = 90,  face = "bold"))
sel <- c("Functionality.Performance.Quantification.DynamicPeptideRange", "Functionality.Performance.Quantification.DynamicProteinRange")
ttt <- tttb[tttb$Metric %in% sel, ]
ttt$Metric <- gsub("[A-Z,a-z]*\\.","", ttt$Metric)
g4 <- ggplot(ttt, aes(x = Workflow, y = value, color = Metric)) +
# Add segments from the baseline to the value
geom_segment(aes(xend = Workflow, yend = 0), size = 1,
position = position_dodge(width = 0.5)) +
# Add points at the value
geom_point(size = 5,  position = position_dodge(width = 0.5)) +
# Add labels for the value
geom_text(aes(label = round(value, 0)), size=3, hjust = rep(c(1.7, -0.7), 4),
position = position_dodge(width = 0.5)) +
# Add titles and caption
labs(title = "D) Dynamic range",
subtitle = "Difference between lowest and hights reported numbers",
caption = "", x = "") +
# Remove the legend title
theme(legend.title = element_blank()) +
# Specify the colors and labels for the color aesthetic
scale_color_manual(values = c_types) + theme_light() +
# Rotate the x labels 90 degrees
theme(axis.text.x = element_text(colour=c_workflows, size = 12, hjust = 1, vjust = 0.2, angle = 90,  face = "bold"))
grid.arrange(g1, g2, g3, g4, ncol=2)
proteins <- s_proteins <- NULL
for (w in workflows) {
p <- read.csv(paste0(folder, "/stand_prot_quant_merged",w,".csv"))
# fix for compomics
p <- p[!is.na(p$protein_group),]
pg <- p$protein_group
pg <- gsub("sp\\|","",pg)
pg <- gsub(",",";",pg)
pg <- gsub(" ","",pg)
pg <- gsub("\\|[A-Z,0-9]*_YEAST","",pg)
pg <- gsub("\\|[A-Z,0-9]*_HUMAN_UPS","",pg)
pg <- gsub("\\|[A-Z,0-9]*_HUMAN","",pg)
rownames(p) <- pg
p <- p[,2:ncol(p)]
colnames(p) <- paste(w, colnames(p))
s_proteins[[w]] <- p[, grep(" abundance_", colnames(p))]
if(length(proteins) > 0) {
proteins <- merge(proteins, p, by.x=1, by.y=0, all=T)
} else {
proteins <- cbind(rownames(p), p)
}
}
rownames(proteins) <- proteins[,1]
qproteins <- proteins[, grep(" abundance_", colnames(proteins))]
qproteins <- as.matrix(qproteins)
qproteins <- qproteins[!grepl("REV_", rownames(qproteins)),]
qproteins <- qproteins[!grepl("CON_", rownames(qproteins)),]
qproteins <- t(t(qproteins) - colMedians(qproteins, na.rm=T))
diff_proteins <- as.matrix(proteins[, grep("differential_abundance_qvalue", colnames(proteins))])
# Setting side colors for sample types and workflows
colnames(qproteins) <- gsub("\\.", "_", colnames(qproteins))
col_classes <- sub("_[0-9]*$","",colnames(qproteins))
sample_types <- sub(paste(paste0(workflows, " "), collapse="|"), "", col_classes)
c_sample_types <- colorpanel(length(unique(sample_types)), "#115f9a", "#76c68f", "#d0f400")
# Only needed for PXD009815
sample_types <- gsub("X", "", sample_types)
sample_types <- gsub("CT_mixture_QY_", "", sample_types)
sample_types <- gsub("_CN_UPS1_CV_Standards_Research_Group", "", sample_types)
if(all(grepl("(amol)|(fmol)", sample_types))) {
n_sample_types <- paste0("abundance_", c(paste0(c(10, 50, 100, 250, 500), "_amol"),
paste0(c(1, 5, 10, 25, 50), "_fmol")))
names(c_sample_types) <- n_sample_types
c_sample_types <- c_sample_types[sample_types]
} else {
c_sample_types <- c_sample_types[as.factor(sample_types)]
n_sample_types <- unique(sort(sample_types))
}
workflow_types <- str_extract( col_classes, paste(workflows, collapse="|"))
c_workflow_types <- brewer.pal(4, "Set1")[as.factor(workflow_types)]
heatmap.2(1-as.matrix(dist(t(!is.na(qproteins))/nrow(qproteins), method="manhattan")), scale="none", trace="none",
col=colorpanel(50, "white", "black"), ColSideColors = c_sample_types, RowSideColors = c_workflow_types,
srtCol = 45, srtRow = 45, cexRow=40/ncol(qproteins), cexCol=40/ncol(qproteins),
sepwidth=c(0,0), sepcolor = NA, key=T, keysize=1.5, labRow = "", labCol = "", xlab="Sample types",
ylab = "Workflows")
legend("topright", fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend("bottomleft", fill=brewer.pal(4, "Set1"),
legend=workflows, xpd=TRUE, cex = 0.8, border=0)
legend(100,200, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend(1,1, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend(2,1, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend(200,1, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend(20,1, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend(40,1, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend(37,1, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend(37,2, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend(37,0.5, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend(37,1.5, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
heatmap.2(1-as.matrix(dist(t(!is.na(qproteins))/nrow(qproteins), method="manhattan")), scale="none", trace="none",
col=colorpanel(50, "white", "black"), ColSideColors = c_sample_types, RowSideColors = c_workflow_types,
srtCol = 45, srtRow = 45, cexRow=40/ncol(qproteins), cexCol=40/ncol(qproteins),
sepwidth=c(0,0), sepcolor = NA, key=T, keysize=1.5, labRow = "", labCol = "", xlab="Sample types",
ylab = "Workflows")
legend(37,1.5, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend(37,15, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend(37,500, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend(37,1200, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend(37,1400, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend(37,1600, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend(37,1550, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
heatmap.2(1-as.matrix(dist(t(!is.na(qproteins))/nrow(qproteins), method="manhattan")), scale="none", trace="none",
col=colorpanel(50, "white", "black"), ColSideColors = c_sample_types, RowSideColors = c_workflow_types,
srtCol = 45, srtRow = 45, cexRow=40/ncol(qproteins), cexCol=40/ncol(qproteins),
sepwidth=c(0,0), sepcolor = NA, key=T, keysize=1.5, labRow = "", labCol = "", xlab="Sample types",
ylab = "Workflows")
legend(37,1570, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend("bottomleft", fill=brewer.pal(4, "Set1"),
legend=workflows, xpd=TRUE, cex = 0.8, border=0)
heatmap.2(1-as.matrix(dist(t(!is.na(qproteins))/nrow(qproteins), method="manhattan")), scale="none", trace="none",
col=colorpanel(50, "white", "black"), ColSideColors = c_sample_types, RowSideColors = c_workflow_types,
srtCol = 45, srtRow = 45, cexRow=40/ncol(qproteins), cexCol=40/ncol(qproteins),
sepwidth=c(0,0), sepcolor = NA, key=T, keysize=1.5, labRow = "", labCol = "", xlab="Sample types",
ylab = "Workflows")
legend(37,1530, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend("bottomleft", fill=brewer.pal(4, "Set1"),
legend=workflows, xpd=TRUE, cex = 0.8, border=0)
heatmap.2(1-as.matrix(dist(t(!is.na(qproteins))/nrow(qproteins), method="manhattan")), scale="none", trace="none",
col=colorpanel(50, "white", "black"), ColSideColors = c_sample_types, RowSideColors = c_workflow_types,
srtCol = 45, srtRow = 45, cexRow=40/ncol(qproteins), cexCol=40/ncol(qproteins),
sepwidth=c(0,0), sepcolor = NA, key=T, keysize=1.5, labRow = "", labCol = "", xlab="Sample types",
ylab = "Workflows")
legend(37,1560, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend("bottomleft", fill=brewer.pal(4, "Set1"),
legend=workflows, xpd=TRUE, cex = 0.8, border=0)
heatmap.2(1-as.matrix(dist(t(!is.na(qproteins))/nrow(qproteins), method="manhattan")), scale="none", trace="none",
col=colorpanel(50, "white", "black"), ColSideColors = c_sample_types, RowSideColors = c_workflow_types,
srtCol = 45, srtRow = 45, cexRow=40/ncol(qproteins), cexCol=40/ncol(qproteins),
sepwidth=c(0,0), sepcolor = NA, key=T, keysize=1.5, labRow = "", labCol = "", xlab="Sample types",
ylab = "Workflows")
legend(37,1555, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend("bottomleft", fill=brewer.pal(4, "Set1"),
legend=workflows, xpd=TRUE, cex = 0.8, border=0)
legend(-5, 200, fill=brewer.pal(4, "Set1"),
legend=workflows, xpd=TRUE, cex = 0.8, border=0)
legend(-10, 200, fill=brewer.pal(4, "Set1"),
legend=workflows, xpd=TRUE, cex = 0.8, border=0)
heatmap.2(cor((qproteins), use="pairwise.complete.obs"), trace="none", scale="none",
col=colorpanel(50, "red", "white", "blue"), ColSideColors = c_sample_types, RowSideColors = c_workflow_types,
srtCol = 45, srtRow = 45, cexRow=40/ncol(qproteins), cexCol=40/ncol(qproteins), rowsep=0, colsep=0,
labRow = "", labCol = "", xlab="Sample types",
ylab = "Workflows")
heatmap.2(1-as.matrix(dist(t(!is.na(qproteins))/nrow(qproteins), method="manhattan")), scale="none", trace="none",
col=colorpanel(50, "white", "black"), ColSideColors = c_sample_types, RowSideColors = c_workflow_types,
srtCol = 45, srtRow = 45, cexRow=40/ncol(qproteins), cexCol=40/ncol(qproteins),
sepwidth=c(0,0), sepcolor = NA, key=T, keysize=1.5, labRow = "", labCol = "", xlab="Sample types",
ylab = "Workflows")
legend(37,1555, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend(-10, 200, fill=brewer.pal(4, "Set1"),
legend=workflows, xpd=TRUE, cex = 0.8, border=0)
dim(1-as.matrix(dist(t(!is.na(qproteins))/nrow(qproteins))
)
)
length(c_sample_types)
heads(1-as.matrix(dist(t(!is.na(qproteins))/nrow(qproteins))
))
1-as.matrix(dist(t(!is.na(qproteins))/nrow(qproteins), method="manhattan"))
dim(1-as.matrix(dist(t(!is.na(qproteins))/nrow(qproteins), method="manhattan")))
heatmap.2(cor((qproteins), use="pairwise.complete.obs"), trace="none", scale="none",
col=colorpanel(50, "red", "white", "blue"), ColSideColors = c_sample_types, RowSideColors = c_workflow_types,
srtCol = 45, srtRow = 45, cexRow=40/ncol(qproteins), cexCol=40/ncol(qproteins), rowsep=0, colsep=0,
labRow = "", labCol = "", xlab="Sample types",
ylab = "Workflows")
legend("topright", fill=colorpanel(length(unique(sample_types)), "#115f9a", "#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend("bottomleft", fill=brewer.pal(4, "Set1"),
legend=workflows, xpd=TRUE, cex = 0.8, border=0)
length(unique(sample_types))
n_sample_types
# Setting side colors for sample types and workflows
colnames(qproteins) <- gsub("\\.", "_", colnames(qproteins))
col_classes <- sub("_[0-9]*$","",colnames(qproteins))
sample_types <- sub(paste(paste0(workflows, " "), collapse="|"), "", col_classes)
c_sample_types <- colorpanel(length(unique(sample_types)), "#115f9a", "#76c68f", "#d0f400")
# Only needed for PXD009815
sample_types <- gsub("X", "", sample_types)
sample_types <- gsub("CT_mixture_QY_", "", sample_types)
sample_types <- gsub("_CN_UPS1_CV_Standards_Research_Group", "", sample_types)
if(all(grepl("(amol)|(fmol)", sample_types))) {
n_sample_types <- paste0("abundance_", c(paste0(c(10, 50, 100, 250, 500), "_amol"),
paste0(c(1, 5, 10, 25, 50), "_fmol")))
names(c_sample_types) <- n_sample_types
c_sample_types <- c_sample_types[sample_types]
} else {
c_sample_types <- c_sample_types[as.factor(sample_types)]
n_sample_types <- unique(sort(sample_types))
}
workflow_types <- str_extract( col_classes, paste(workflows, collapse="|"))
c_workflow_types <- brewer.pal(4, "Set1")[as.factor(workflow_types)]
heatmap.2(1-as.matrix(dist(t(!is.na(qproteins))/nrow(qproteins), method="manhattan")), scale="none", trace="none",
col=colorpanel(50, "white", "black"), ColSideColors = c_sample_types, RowSideColors = c_workflow_types,
srtCol = 45, srtRow = 45, cexRow=40/ncol(qproteins), cexCol=40/ncol(qproteins),
sepwidth=c(0,0), sepcolor = NA, key=T, keysize=1.5, labRow = "", labCol = "", xlab="Sample types",
ylab = "Workflows")
legend(37,1555, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend(-10, 200, fill=brewer.pal(4, "Set1"),
legend=workflows, xpd=TRUE, cex = 0.8, border=0)
length(unique(sample_types)
)
# Setting side colors for sample types and workflows
colnames(qproteins) <- gsub("\\.", "_", colnames(qproteins))
col_classes <- sub("_[0-9]*$","",colnames(qproteins))
sample_types <- sub(paste(paste0(workflows, " "), collapse="|"), "", col_classes)
sample_types
# Only needed for PXD009815
sample_types <- gsub("X", "", sample_types)
sample_types <- gsub("CT_mixture_QY_", "", sample_types)
sample_types <- gsub("_CN_UPS1_CV_Standards_Research_Group", "", sample_types)
sample_types
# n_sample_types <- paste0("abundance_", c(paste0(c(10, 50, 100, 250, 500), "_amol"),
#                                          paste0(c(1, 5, 10, 25, 50), "_fmol")))
names(c_sample_types) <- n_sample_types
c_sample_types <- c_sample_types[sample_types]
if(all(grepl("(amol)|(fmol)", sample_types))) {
# n_sample_types <- paste0("abundance_", c(paste0(c(10, 50, 100, 250, 500), "_amol"),
#                                          paste0(c(1, 5, 10, 25, 50), "_fmol")))
names(c_sample_types) <- n_sample_types
c_sample_types <- c_sample_types[sample_types]
} else {
c_sample_types <- c_sample_types[as.factor(sample_types)]
n_sample_types <- unique(sort(sample_types))
}
workflow_types <- str_extract( col_classes, paste(workflows, collapse="|"))
c_workflow_types <- brewer.pal(4, "Set1")[as.factor(workflow_types)]
heatmap.2(1-as.matrix(dist(t(!is.na(qproteins))/nrow(qproteins), method="manhattan")), scale="none", trace="none",
col=colorpanel(50, "white", "black"), ColSideColors = c_sample_types, RowSideColors = c_workflow_types,
srtCol = 45, srtRow = 45, cexRow=40/ncol(qproteins), cexCol=40/ncol(qproteins),
sepwidth=c(0,0), sepcolor = NA, key=T, keysize=1.5, labRow = "", labCol = "", xlab="Sample types",
ylab = "Workflows")
legend(37,1555, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend(-10, 200, fill=brewer.pal(4, "Set1"),
legend=workflows, xpd=TRUE, cex = 0.8, border=0)
heatmap.2(cor((qproteins), use="pairwise.complete.obs"), trace="none", scale="none",
col=colorpanel(50, "red", "white", "blue"), ColSideColors = c_sample_types, RowSideColors = c_workflow_types,
srtCol = 45, srtRow = 45, cexRow=40/ncol(qproteins), cexCol=40/ncol(qproteins), rowsep=0, colsep=0,
labRow = "", labCol = "", xlab="Sample types",
ylab = "Workflows")
source("~/devel/Bioinformatics/ELIXIR_EDAM/WOMBAT-P/Utilities/Scripts/ComparisonFinal/CompareWOMBATResults.R", echo=TRUE)
legend("topright", fill=colorpanel(length(unique(sample_types)), "#115f9a", "#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
n_sample_types
# Setting side colors for sample types and workflows
colnames(qproteins) <- gsub("\\.", "_", colnames(qproteins))
col_classes <- sub("_[0-9]*$","",colnames(qproteins))
sample_types <- sub(paste(paste0(workflows, " "), collapse="|"), "", col_classes)
c_sample_types <- colorpanel(length(unique(sample_types)), "#115f9a", "#76c68f", "#d0f400")
# Only needed for PXD009815
sample_types <- gsub("X", "", sample_types)
sample_types <- gsub("CT_mixture_QY_", "", sample_types)
sample_types <- gsub("_CN_UPS1_CV_Standards_Research_Group", "", sample_types)
# if(all(grepl("(amol)|(fmol)", sample_types))) {
# n_sample_types <- paste0("abundance_", c(paste0(c(10, 50, 100, 250, 500), "_amol"),
#                                          paste0(c(1, 5, 10, 25, 50), "_fmol")))
# names(c_sample_types) <- n_sample_types
# c_sample_types <- c_sample_types[sample_types]
# } else {
c_sample_types <- c_sample_types[as.factor(sample_types)]
n_sample_types <- unique(sort(sample_types))
workflow_types <- str_extract( col_classes, paste(workflows, collapse="|"))
c_workflow_types <- brewer.pal(4, "Set1")[as.factor(workflow_types)]
heatmap.2(1-as.matrix(dist(t(!is.na(qproteins))/nrow(qproteins), method="manhattan")), scale="none", trace="none",
col=colorpanel(50, "white", "black"), ColSideColors = c_sample_types, RowSideColors = c_workflow_types,
srtCol = 45, srtRow = 45, cexRow=40/ncol(qproteins), cexCol=40/ncol(qproteins),
sepwidth=c(0,0), sepcolor = NA, key=T, keysize=1.5, labRow = "", labCol = "", xlab="Sample types",
ylab = "Workflows")
legend(37,1555, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend(-10, 200, fill=brewer.pal(4, "Set1"),
legend=workflows, xpd=TRUE, cex = 0.8, border=0)
heatmap.2(cor((qproteins), use="pairwise.complete.obs"), trace="none", scale="none",
col=colorpanel(50, "red", "white", "blue"), ColSideColors = c_sample_types, RowSideColors = c_workflow_types,
srtCol = 45, srtRow = 45, cexRow=40/ncol(qproteins), cexCol=40/ncol(qproteins), rowsep=0, colsep=0,
labRow = "", labCol = "", xlab="Sample types",
ylab = "Workflows")
legend("topright", fill=colorpanel(length(unique(sample_types)), "#115f9a", "#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
c_sample_types
# Setting side colors for sample types and workflows
colnames(qproteins) <- gsub("\\.", "_", colnames(qproteins))
col_classes <- sub("_[0-9]*$","",colnames(qproteins))
sample_types <- sub(paste(paste0(workflows, " "), collapse="|"), "", col_classes)
c_sample_types <- colorpanel(length(unique(sample_types)), "#115f9a", "#76c68f", "#d0f400")
c_sample_types
unique(sample_types)
# Setting side colors for sample types and workflows
colnames(qproteins) <- gsub("\\.", "_", colnames(qproteins))
col_classes <- sub("_[0-9]*$","",colnames(qproteins))
sample_types <- sub(paste(paste0(workflows, " "), collapse="|"), "", col_classes)
# Only needed for PXD009815
sample_types <- gsub("X", "", sample_types)
sample_types <- gsub("CT_mixture_QY_", "", sample_types)
sample_types <- gsub("_CN_UPS1_CV_Standards_Research_Group", "", sample_types)
if(all(grepl("(amol)|(fmol)", sample_types))) {
n_sample_types <- paste0("abundance_", c(paste0(c(10, 50, 100, 250, 500), "_amol"),
paste0(c(1, 5, 10, 25, 50), "_fmol")))
names(c_sample_types) <- n_sample_types
c_sample_types <- c_sample_types[sample_types]
} else {
c_sample_types <- c_sample_types[as.factor(sample_types)]
n_sample_types <- unique(sort(sample_types))
}
c_sample_types <- colorpanel(length(unique(sample_types)), "#115f9a", "#76c68f", "#d0f400")
workflow_types <- str_extract( col_classes, paste(workflows, collapse="|"))
c_workflow_types <- brewer.pal(4, "Set1")[as.factor(workflow_types)]
heatmap.2(1-as.matrix(dist(t(!is.na(qproteins))/nrow(qproteins), method="manhattan")), scale="none", trace="none",
col=colorpanel(50, "white", "black"), ColSideColors = c_sample_types, RowSideColors = c_workflow_types,
srtCol = 45, srtRow = 45, cexRow=40/ncol(qproteins), cexCol=40/ncol(qproteins),
sepwidth=c(0,0), sepcolor = NA, key=T, keysize=1.5, labRow = "", labCol = "", xlab="Sample types",
ylab = "Workflows")
legend(37,1555, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend(-10, 200, fill=brewer.pal(4, "Set1"),
legend=workflows, xpd=TRUE, cex = 0.8, border=0)
heatmap.2(cor((qproteins), use="pairwise.complete.obs"), trace="none", scale="none",
col=colorpanel(50, "red", "white", "blue"), ColSideColors = c_sample_types, RowSideColors = c_workflow_types,
srtCol = 45, srtRow = 45, cexRow=40/ncol(qproteins), cexCol=40/ncol(qproteins), rowsep=0, colsep=0,
labRow = "", labCol = "", xlab="Sample types",
ylab = "Workflows")
c_sample_types <- colorpanel(length(unique(n_ sample_types)), "#115f9a", "#76c68f", "#d0f400")
workflow_types <- str_extract( col_classes, paste(workflows, collapse="|"))
c_workflow_types <- brewer.pal(4, "Set1")[as.factor(workflow_types)]
heatmap.2(1-as.matrix(dist(t(!is.na(qproteins))/nrow(qproteins), method="manhattan")), scale="none", trace="none",
col=colorpanel(50, "white", "black"), ColSideColors = c_sample_types, RowSideColors = c_workflow_types,
srtCol = 45, srtRow = 45, cexRow=40/ncol(qproteins), cexCol=40/ncol(qproteins),
sepwidth=c(0,0), sepcolor = NA, key=T, keysize=1.5, labRow = "", labCol = "", xlab="Sample types",
ylab = "Workflows")
c_sample_types <- colorpanel(length(unique(n_sample_types)), "#115f9a", "#76c68f", "#d0f400")
workflow_types <- str_extract( col_classes, paste(workflows, collapse="|"))
c_workflow_types <- brewer.pal(4, "Set1")[as.factor(workflow_types)]
heatmap.2(1-as.matrix(dist(t(!is.na(qproteins))/nrow(qproteins), method="manhattan")), scale="none", trace="none",
col=colorpanel(50, "white", "black"), ColSideColors = c_sample_types, RowSideColors = c_workflow_types,
srtCol = 45, srtRow = 45, cexRow=40/ncol(qproteins), cexCol=40/ncol(qproteins),
sepwidth=c(0,0), sepcolor = NA, key=T, keysize=1.5, labRow = "", labCol = "", xlab="Sample types",
ylab = "Workflows")
n_sample_types
# Only needed for PXD009815
sample_types <- gsub("X", "", sample_types)
sample_types <- gsub("CT_mixture_QY_", "", sample_types)
sample_types <- gsub("_CN_UPS1_CV_Standards_Research_Group", "", sample_types)
# Setting side colors for sample types and workflows
colnames(qproteins) <- gsub("\\.", "_", colnames(qproteins))
col_classes <- sub("_[0-9]*$","",colnames(qproteins))
sample_types <- sub(paste(paste0(workflows, " "), collapse="|"), "", col_classes)
sample_types
# Setting side colors for sample types and workflows
colnames(qproteins) <- gsub("\\.", "_", colnames(qproteins))
col_classes <- sub("_[0-9]*$","",colnames(qproteins))
sample_types <- sub(paste(paste0(workflows, " "), collapse="|"), "", col_classes)
# Only needed for PXD009815
sample_types <- gsub("X", "", sample_types)
sample_types <- gsub("CT_mixture_QY_", "", sample_types)
sample_types <- gsub("_CN_UPS1_CV_Standards_Research_Group", "", sample_types)
sample_types
unique(sample_types)
# Setting side colors for sample types and workflows
colnames(qproteins) <- gsub("\\.", "_", colnames(qproteins))
col_classes <- sub("_[0-9]*$","",colnames(qproteins))
sample_types <- sub(paste(paste0(workflows, " "), collapse="|"), "", col_classes)
# Only needed for PXD009815
sample_types <- gsub("X", "", sample_types)
sample_types <- gsub("CT_mixture_QY_", "", sample_types)
sample_types <- gsub("_CN_UPS1_CV_Standards_Research_Group", "", sample_types)
c_sample_types <- colorpanel(length(unique(sample_types)), "#115f9a", "#76c68f", "#d0f400")
if(all(grepl("(amol)|(fmol)", sample_types))) {
n_sample_types <- paste0("abundance_", c(paste0(c(10, 50, 100, 250, 500), "_amol"),
paste0(c(1, 5, 10, 25, 50), "_fmol")))
names(c_sample_types) <- n_sample_types
c_sample_types <- c_sample_types[sample_types]
} else {
c_sample_types <- c_sample_types[as.factor(sample_types)]
n_sample_types <- unique(sort(sample_types))
}
workflow_types <- str_extract( col_classes, paste(workflows, collapse="|"))
c_workflow_types <- brewer.pal(4, "Set1")[as.factor(workflow_types)]
heatmap.2(1-as.matrix(dist(t(!is.na(qproteins))/nrow(qproteins), method="manhattan")), scale="none", trace="none",
col=colorpanel(50, "white", "black"), ColSideColors = c_sample_types, RowSideColors = c_workflow_types,
srtCol = 45, srtRow = 45, cexRow=40/ncol(qproteins), cexCol=40/ncol(qproteins),
sepwidth=c(0,0), sepcolor = NA, key=T, keysize=1.5, labRow = "", labCol = "", xlab="Sample types",
ylab = "Workflows")
legend(37,1555, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend(-10, 200, fill=brewer.pal(4, "Set1"),
legend=workflows, xpd=TRUE, cex = 0.8, border=0)
heatmap.2(cor((qproteins), use="pairwise.complete.obs"), trace="none", scale="none",
col=colorpanel(50, "red", "white", "blue"), ColSideColors = c_sample_types, RowSideColors = c_workflow_types,
srtCol = 45, srtRow = 45, cexRow=40/ncol(qproteins), cexCol=40/ncol(qproteins), rowsep=0, colsep=0,
labRow = "", labCol = "", xlab="Sample types",
ylab = "Workflows")
heatmap.2(1-as.matrix(dist(t(!is.na(qproteins))/nrow(qproteins), method="manhattan")), scale="none", trace="none",
col=colorpanel(50, "white", "black"), ColSideColors = c_sample_types, RowSideColors = c_workflow_types,
srtCol = 45, srtRow = 45, cexRow=40/ncol(qproteins), cexCol=40/ncol(qproteins),
sepwidth=c(0,0), sepcolor = NA, key=T, keysize=1.5, labRow = "", labCol = "", xlab="Sample types",
ylab = "Workflows")
legend(37,1555, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend(-10, 200, fill=brewer.pal(4, "Set1"),
legend=workflows, xpd=TRUE, cex = 0.8, border=0)
# legend(37,1555, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
#        legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
# legend(-10, 200, fill=brewer.pal(4, "Set1"),
#        legend=workflows, xpd=TRUE, cex = 0.8, border=0)
heatmap.2(cor((qproteins), use="pairwise.complete.obs"), trace="none", scale="none",
col=colorpanel(50, "red", "white", "blue"), ColSideColors = c_sample_types, RowSideColors = c_workflow_types,
srtCol = 45, srtRow = 45, cexRow=40/ncol(qproteins), cexCol=40/ncol(qproteins), rowsep=0, colsep=0,
labRow = "", labCol = "", xlab="Sample types",
ylab = "Workflows")
legend(37,1555, fill=colorpanel(length(unique(sample_types)),"#115f9a", mid="#76c68f", "#d0f400"),
legend=n_sample_types, xpd=TRUE, cex=0.8, border=0)
legend(-10, 200, fill=brewer.pal(4, "Set1"),
legend=workflows, xpd=TRUE, cex = 0.8, border=0)
citation("clusterProfiler")
?heatmap.2
citation(gplots)
citation("gplots")
shapiro.test(rnorm(10))
shapiro.test(rnorm(1000))
shapiro.test(rnorm(10000))
shapiro.test(rnorm(1000))
shapiro.test(rnorm(1000))
shapiro.test(rnorm(1000))
shapiro.test(rnorm(1000))
shapiro.test(rnorm(1000))
shapiro.test(lrnorm(1000))
shapiro.test(rlnorm(1000))
library(DAAG)
data(hills)
data(hills2000)
head(hills)
